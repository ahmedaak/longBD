{
    "collab_server" : "",
    "contents" : "---\ntitle: 'Results of longitudinal BOLD delay manuscript, submission #2 to Stroke'\nauthor: \"Ahmed Khalil\"\ndate: \"`r format(Sys.time(), '%B %d, %Y')`\"\noutput:\n  html_document:\n    number_sections: no\n    theme: journal\n  pdf_document: default\n  word_document: default\n---\n\n```{r setup, include=FALSE, fig.align='center'}\nknitr::opts_chunk$set(echo = TRUE)\nrm(list = ls())\nlibrary(coin)\n```\n\nThis is a comprehensive report of all the results of the \"Longitudinal BOLD delay\" manuscript, submitted (*de novo*) to *Stroke* in June 2017.\n\nNB: All effect sizes for the Wilcoxon signed-rank test (paired, i.e. two dependent groups) calculated according to *Rosenthal, Robert. Parametric measures of effect size. The handbook of research synthesis (1994): 231-244*.\n\n### Volumetric analysis of patients with and without vessel recanalization\n\n```{r message=FALSE, cache=FALSE, warning=FALSE, echo=FALSE, fig.width=4, fig.height=4}\nsource(\"volumes.R\")\nboxplot(TSA_ratio_man~recan, data = volumes_data, main = \"BOLD delay D1/D0 ratios (manual)\", xlab = \"Recanalization\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\nboxplot(Tmax_ratio_man~recan, data = volumes_data, main = \"Tmax D1/D0 ratios (manual)\", xlab = \"Recanalization\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\nboxplot(TSA_ratio_auto~recan, data = volumes_data, main = \"BOLD delay D1/D0 ratios (auto)\", xlab = \"Recanalization\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\nboxplot(Tmax_ratio_auto~recan, data = volumes_data, main = \"Tmax D1/D0 ratios (auto)\", xlab = \"Recanalization\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\n\n# test for differences in median ratios with Mann Whitney U test between recan + nonrecan\nrecan_ratio_wilcox1 <- wilcox.test(volumes_data$TSA_ratio_man~volumes_data$recan)\nrecan_ratio_wilcox2 <- wilcox.test(volumes_data$TSA_ratio_auto~volumes_data$recan)\n\n```\n\n\n`r I(recan_ratio_wilcox1$method)` between `r I(recan_ratio_wilcox1$data.name)` is p = `r round(I(recan_ratio_wilcox1$p.value),5)`.\n\n`r I(recan_ratio_wilcox2$method)` between `r I(recan_ratio_wilcox2$data.name)` is p = `r round(I(recan_ratio_wilcox2$p.value),5)`.\n\n**In patients with vessel recanalization within 24 hours of baseline imaging, BOLD delay lesions become smaller.\nIn patients with persistent vessel occlusion (PVO), BOLD delay lesions expand, unlike Tmax lesions, which tend to remain stable/shrink a little in this situation.**\n\n```{r message=FALSE, cache=FALSE, warning=FALSE, echo=FALSE, fig.width=4, fig.height=4}\nboxplot(TSA_ratio_man~TIMI, data = volumes_data, main = \"BOLD delay D1/D0 ratios (manual)\", xlab = \"TIMI score\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\nboxplot(Tmax_ratio_man~TIMI, data = volumes_data, main = \"Tmax D1/D0 ratios (manual)\", xlab = \"TIMI score\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\nboxplot(TSA_ratio_auto~TIMI, data = volumes_data, main = \"BOLD delay D1/D0 ratios (auto)\", xlab = \"TIMI score\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\nboxplot(Tmax_ratio_auto~TIMI, data = volumes_data, main = \"Tmax D1/D0 ratios (auto)\", xlab = \"TIMI score\", ylab = \"Ratio\")\nabline(h = 1, lty = 2)\n\n# calculate correlations between ratios and TIMI scores\ntimi_ratio_corr1 <- cor.test(volumes_data$TSA_ratio_man, volumes_data$TIMI, method = \"spearman\")\ntimi_ratio_corr2 <- cor.test(volumes_data$TSA_ratio_auto, volumes_data$TIMI, method = \"spearman\")\n\n\n```\n\n\n`r I(timi_ratio_corr1$method)` between `r I(timi_ratio_corr1$data.name)` is `r round(I(timi_ratio_corr1$estimate),2)`, p = `r round(I(timi_ratio_corr1$p.value),5)`.\n\n`r I(timi_ratio_corr2$method)` between `r I(timi_ratio_corr2$data.name)` is `r round(I(timi_ratio_corr2$estimate),2)`, p = `r round(I(timi_ratio_corr2$p.value),5)`.\n\n**The change in BOLD delay lesion volume between baseline (D0) and follow-up (D1) correlates with the degree of vessel recanalization as measured by the TIMI score.**\n\n### Agreement between manually delineated and automated perfusion lesion volumes\n```{r message=F, cache=F, warning=F, echo=F, fig.width=5, fig.height=5}\n# print agreement between volumes + ratios      \nfor (x in agr_list_all) {\n        print(x$comparison)\n        print(paste(\"ICC=\", round(x$value,2), \", 95% CI =\", round(x$lbound,2), \"-\", round(x$ubound,2), \", p =\", round(x$p.value,4), \", F =\", round(x$Fvalue,2)))}\n\n# plot correlation between ratios\nplot(volumes_data$TSA_ratio_man, volumes_data$TSA_ratio_auto, col = \"blue\", pch = 16\n     , main = \"Correlation between ratios\", xlab = \"Manual\", ylab = \"Automated\")\npoints(volumes_data$Tmax_ratio_man, volumes_data$Tmax_ratio_auto, col = \"red\", pch = 16)\nabline(0,1)\nlegend(\"topleft\", legend = c(\"BOLD delay ratio\", \"Tmax ratio\"), pch = 16, bty = \"o\", col = c(\"blue\", \"red\"))\n\nBD_manual_auto_corr <-  cor.test(volumes_data$TSA_ratio_man, volumes_data$TSA_ratio_auto, method = \"spearman\")\nTmax_manual_auto_corr <-  cor.test(volumes_data$Tmax_ratio_man, volumes_data$Tmax_ratio_auto, method = \"spearman\")\n\n```\n\n`r I(BD_manual_auto_corr$method)` between `r I(BD_manual_auto_corr$data.name)` is `r round(I(BD_manual_auto_corr$estimate),2)`, p = `r round(I(BD_manual_auto_corr$p.value),5)`.\n\n`r I(Tmax_manual_auto_corr$method)` between `r I(Tmax_manual_auto_corr$data.name)` is `r round(I(Tmax_manual_auto_corr$estimate),2)`, p = `r round(I(Tmax_manual_auto_corr$p.value),5)`.\n\n**The volumetry results are similar using a completely automated delineation approach.**\n\n### Changes in BOLD delay values over time (voxelwise, in entire affected vascular territory)\n\nNote that in all the following graphs, <span style=\"color:blue\">blue</span> represents day 0 and <span style=\"color:red\">red</span> day 1.\n\n```{r message=F, cache=F, warning=F, echo=F, fig.asp=0.5, fig.width=8}\nsource(\"plotting_values.R\")\n\nfor (i in perfusion_list) {\n  # calculate kernel densities for voxelwise BOLD delay values in entire VTs\n  v = get(i)\n  d0_nonrecan <- density(v$nonrecan.vals.d0, bw = 1)\n  d1_nonrecan <- density(v$nonrecan.vals.d1, bw = 1)\n  \n  d0_recan <- density(v$recan.vals.d0, bw = 1)\n  d1_recan <- density(v$recan.vals.d1, bw = 1)\n  \n  ## KERNEL DENSITY PLOTS\n          # create transparent fill colours\n          redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)\n          bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)\n  \n  par(mfrow=c(1,2))\n  plot(d1_nonrecan, col = \"red\", xlim=(c(0,20)), ylim=c(0,max(d0_nonrecan$y, d1_nonrecan$y, d0_recan$y, d1_recan$y)), main = paste(i, \"non-recan\"), lwd = 3, xlab = \"Seconds\")\n  polygon(d1_nonrecan, col = redtrans, border = \"red\")\n  lines(d0_nonrecan, col = \"blue\", lwd = 3)\n  polygon(d0_nonrecan, col = bluetrans, border = \"blue\")\n  \n  abline(v = mean(v$nonrecan.vals.d0), col = \"blue\", lty = 3, lwd = 3)\n  abline(v = mean(v$nonrecan.vals.d1), col = \"red\", lty = 3, lwd = 3)\n  \n  plot(d1_recan, col = \"red\", xlim=(c(0,20)), ylim=c(0,max(d0_nonrecan$y, d1_nonrecan$y, d0_recan$y, d1_recan$y)), main = paste(i, \"recan\"), lwd = 3, xlab = \"Seconds\")\n  polygon(d1_recan, col = redtrans, border = \"red\")\n  lines(d0_recan, col = \"blue\", lwd = 3)\n  polygon(d0_recan, col = bluetrans, border = \"blue\")\n  \n  abline(v = mean(v$recan.vals.d0), col = \"blue\", lty = 3, lwd = 3)\n  abline(v = mean(v$recan.vals.d1), col = \"red\", lty = 3, lwd = 3)\n  \n    }\n  \n```\n\n### Changes in BOLD delay values over time (voxelwise, in relevant ROIs)\n\n```{r message=F, cache=F, warning=F, echo=F, fig.height=8, fig.width=8}\n # plot voxelwise BOLD delay values in different ROIs (baseline DWI, infarct growth, rest of VT, or contralateral)\nfor (x in BD_allrois) {\nBD_VS_allrois <- readMat(paste(x, \".mat\", sep = \"\"))\nd_bl_d0 <- density(BD_VS_allrois$d0.bl.all, bw = 1)\nd_bl_d1 <- density(BD_VS_allrois$d1.bl.all, bw = 1)\nd_ig_d0 <- density(BD_VS_allrois$d0.ig.all, bw = 1)\nd_ig_d1 <- density(BD_VS_allrois$d1.ig.all, bw = 1)\nd_bey_d0 <- density(BD_VS_allrois$d0.bey.all, bw = 1)\nd_bey_d1 <- density(BD_VS_allrois$d1.bey.all, bw = 1)\nd_cl_d0 <- density(BD_VS_allrois$d0.cl.all, bw = 1)\nd_cl_d1 <- density(BD_VS_allrois$d1.cl.all, bw = 1)\n\n# load Wilcoxon test results\nload(paste(x, \"_differences_d0_d1_ROIs.Rdata\"))\n\npar(oma=c(0,0,2,0))\npar(mfrow=c(2,2))\nymax <- max(d_bl_d0$y, d_bl_d1$y, d_ig_d0$y, d_ig_d1$y, d_bey_d0$y, d_bey_d1$y, d_cl_d1$y, d_cl_d0$y)\nplot(d_bl_d1, col = \"red\", xlim=(c(0,20)), ylim = c(0,ymax), main = paste(\"Baseline (D0) DWI lesion\"), lwd = 3, xlab = \"BOLD delay (s)\")\npolygon(d_bl_d1, col = redtrans, border = \"red\")\nlines(d_bl_d0, col = \"blue\", lwd = 3)\npolygon(d_bl_d0, col = bluetrans, border = \"blue\")\ntext(15, 0.3, labels = paste(\"ES=\", signif(roi_d0_d1_wilcox1@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.bl.all)*2), 2)), cex = 1.3, col = \"green4\")\ntext(15, 0.35, labels = paste(\"p=\", signif(pvalue(roi_d0_d1_wilcox1),3)), cex = 1.3)\n\nabline(v = mean(BD_VS_allrois$d0.bl.all), col = \"blue\", lty = 3, lwd = 3)\nabline(v = mean(BD_VS_allrois$d1.bl.all), col = \"red\", lty = 3, lwd = 3)\n\nplot(d_ig_d1, col = \"red\", xlim=(c(0,20)), ylim = c(0,ymax), main = paste(\"D0 - D5 infarct growth\"), lwd = 3, xlab = \"BOLD delay (s)\")\npolygon(d_ig_d1, col = redtrans, border = \"red\")\nlines(d_ig_d0, col = \"blue\", lwd = 3)\npolygon(d_ig_d0, col = bluetrans, border = \"blue\")\ntext(15, 0.3, labels = paste(\"ES=\", signif(roi_d0_d1_wilcox2@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.ig.all)*2), 2)), cex = 1.3, col = \"green4\")\ntext(15, 0.35, labels = paste(\"p=\", signif(pvalue(roi_d0_d1_wilcox2),3)), cex = 1.3)\n\nabline(v = mean(BD_VS_allrois$d0.ig.all), col = \"blue\", lty = 3, lwd = 3)\nabline(v = mean(BD_VS_allrois$d1.ig.all), col = \"red\", lty = 3, lwd = 3)\n\nplot(d_bey_d1, col = \"red\", xlim=(c(0,20)), ylim = c(0,ymax), main = paste(\"Rest of affected VT\"), lwd = 3, xlab = \"BOLD delay (s)\")\npolygon(d_bey_d1, col = redtrans, border = \"red\")\nlines(d_bey_d0, col = \"blue\", lwd = 3)\npolygon(d_bey_d0, col = bluetrans, border = \"blue\")\ntext(15, 0.3, labels = paste(\"ES=\", signif(roi_d0_d1_wilcox3@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.bey.all)*2), 2)), cex = 1.3, col = \"green4\")\ntext(15, 0.35, labels = paste(\"p=\", signif(pvalue(roi_d0_d1_wilcox3),3)), cex = 1.3)\n\nabline(v = mean(BD_VS_allrois$d0.bey.all), col = \"blue\", lty = 3, lwd = 3)\nabline(v = mean(BD_VS_allrois$d1.bey.all), col = \"red\", lty = 3, lwd = 3)\n\nplot(d_cl_d1, col = \"red\", xlim=(c(0,20)), ylim = c(0,ymax), main = paste(\"Contralateral\"), lwd = 3, xlab = \"BOLD delay (s)\")\npolygon(d_cl_d1, col = redtrans, border = \"red\")\nlines(d_cl_d0, col = \"blue\", lwd = 3)\npolygon(d_cl_d0, col = bluetrans, border = \"blue\")\ntext(15, 0.3, labels = paste(\"ES=\", signif(roi_d0_d1_wilcox4@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.cl.all)*2), 2)), cex = 1.3, col = \"green4\")\ntext(15, 0.35, labels = paste(\"p=\", signif(pvalue(roi_d0_d1_wilcox4),3)), cex = 1.3)\n\nabline(v = mean(BD_VS_allrois$d0.cl.all), col = \"blue\", lty = 3, lwd = 3)\nabline(v = mean(BD_VS_allrois$d1.cl.all), col = \"red\", lty = 3, lwd = 3)\ntitle(main=x,outer=T)\n\n# test for differences between D0 + D1 in each of the ROIs (takes so long, so save then load whenever needed)\n\n## UNCOMMENT THIS SECTION IF SOMETHING HAS CHANGED IN THE ORIGINAL DATA FILE WHERE BD_VS_allrois COMES FROM !!! ###\n            # roi_d0_d1_wilcox1 <- wilcoxsign_test(BD_VS_allrois$d0.bl.all~BD_VS_allrois$d1.bl.all, paired = T)\n            # roi_d0_d1_wilcox2 <- wilcoxsign_test(BD_VS_allrois$d0.ig.all~BD_VS_allrois$d1.ig.all, paired = T)\n            # roi_d0_d1_wilcox3 <- wilcoxsign_test(BD_VS_allrois$d0.bey.all~BD_VS_allrois$d1.bey.all, paired = T)\n            # roi_d0_d1_wilcox4 <- wilcoxsign_test(BD_VS_allrois$d0.cl.all~BD_VS_allrois$d1.cl.all, paired = T)\n            # \n            # save(roi_d0_d1_wilcox1, roi_d0_d1_wilcox2, roi_d0_d1_wilcox3, roi_d0_d1_wilcox4, list = c(\"roi_d0_d1_wilcox1\", \"roi_d0_d1_wilcox2\", \"roi_d0_d1_wilcox3\", \"roi_d0_d1_wilcox4\"), file = paste(x, \"_differences_d0_d1_ROIs.Rdata\"))\n\n\nprint(x)\nprint(\"Initial DWI lesion\")\nprint(roi_d0_d1_wilcox1)\nprint(paste(\"Effect size=\", signif(roi_d0_d1_wilcox1@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.bl.all)*2), 2)))\n\nprint(\"Infarct growth\")\nprint(roi_d0_d1_wilcox2)\nprint(paste(\"Effect size=\", signif(roi_d0_d1_wilcox2@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.ig.all)*2), 2)))\n\nprint(\"Rest of affected VT\")\nprint(roi_d0_d1_wilcox3)\nprint(paste(\"Effect size=\", signif(roi_d0_d1_wilcox3@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.bey.all)*2), 2)))\n\nprint(\"Contralateral VT\")\nprint(roi_d0_d1_wilcox4)\nprint(paste(\"Effect size=\", signif(roi_d0_d1_wilcox4@statistic@teststatistic/sqrt(length(BD_VS_allrois$d0.cl.all)*2), 2)))\n\n}\n\n```\n\n\n### Changes in BOLD delay values over time (means, in relevant ROIs)\n\n```{r message=F, cache=F, warning=F, echo=F, fig.height=4, fig.width=4}\n# plot mean BOLD delay values in different ROIs (baseline DWI, infarct growth, rest of VT, or contralateral)\n## VIOLIN PLOTS\n  for (y in BD_meanvals) {\n    BD_all_meanvals <- as.data.frame(readMat(paste(y, \".mat\", sep = \"\")))\n    colnames(BD_all_meanvals) <- c(\"BL_0\", \"BL_1\", \"IG_0\", \"IG_1\", \"VT_0\", \"VT_1\", \"CL_0\", \"CL_1\")\n    df.m <- reshape2::melt(BD_all_meanvals, id.vars = NULL) # convert data frame to long format for ggplot\n    dimens <- dim(BD_all_meanvals)\n    colors2 = rep(c(rep(c(\"red3\"),dimens[1]), rep(c(\"blue3\"),dimens[1])),4)\n    colnames(df.m) <- c(\"ROI\", \"Delay\")\n    p1 <- ggplot(df.m, aes(x = ROI, y = Delay, fill = colors2)) + geom_violin(scale = \"width\", adjust = 0.6, draw_quantiles = c(0.25, 0.75)) + ggtitle(y)\n    p2 <- p1 + stat_summary(fun.y=median, geom=\"point\", size=2, color=\"black\") + theme_bw() + theme(legend.position=\"none\") + theme(plot.title = element_text(hjust = 0.5))#+ geom_boxplot(width = 0.1)\n    print(p2)\n  } \n```\n\n\n### Changes in perfusion values over time (mean values from ROI atlas, entire brain)\n```{r message=F, cache=F, warning=F, echo=F, fig.asp=1.5}\nsource(\"roivals.R\")\npar(mfrow=c(3,2))\nplot(roi_perf_vals$tsa.d0.nonrecan, roi_perf_vals$tsa.d1.nonrecan, xlab = \"BOLD delay (s) D0\", ylab = \"BOLD delay (s) D1\", main = \"Non-recanalizers\"); abline(0,1, lty = 2)\nplot(roi_perf_vals$tsa.d0.recan, roi_perf_vals$tsa.d1.recan, xlab = \"BOLD delay (s) D0\", ylab = \"BOLD delay (s) D1\", main = \"Recanalizers\"); abline(0,1, lty = 2)\nplot(roi_perf_vals$tmax.d0.nonrecan, roi_perf_vals$tmax.d1.nonrecan, xlab = \"Tmax (s) D0\", ylab = \"Tmax (s) D1\", main = \"Non-recanalizers\"); abline(0,1, lty = 2)\nplot(roi_perf_vals$tmax.d0.recan, roi_perf_vals$tmax.d1.recan, xlab = \"Tmax (s) D0\", ylab = \"Tmax (s) D1\", main = \"Recanalizers\"); abline(0,1, lty = 2)\nplot(roi_perf_vals$ttp.d0.nonrecan, roi_perf_vals$ttp.d1.nonrecan, xlab = \"TTP (s) D0\", ylab = \"TTP (s) D1\", main = \"Non-recanalizers\"); abline(0,1, lty = 2)\nplot(roi_perf_vals$ttp.d0.recan, roi_perf_vals$ttp.d1.recan, xlab = \"TTP (s) D0\", ylab = \"TTP (s) D1\", main = \"Recanalizers\"); abline(0,1, lty = 2)\n\n# correlation between BOLD delay and Tmax/TTP on different days\ncorr_BD_tmax_d0_nonrecan <- cor.test(roi_perf_vals$tmax.d0.nonrecan, roi_perf_vals$tsa.d0.nonrecan, method = \"pearson\")\ncorr_BD_tmax_d0_recan <- cor.test(roi_perf_vals$tmax.d0.recan, roi_perf_vals$tsa.d0.recan, method = \"pearson\")\ncorr_BD_tmax_d1_nonrecan <- cor.test(roi_perf_vals$tmax.d1.nonrecan, roi_perf_vals$tsa.d1.nonrecan, method = \"pearson\")\ncorr_BD_tmax_d1_recan <- cor.test(roi_perf_vals$tmax.d1.recan, roi_perf_vals$tsa.d1.recan, method = \"pearson\")\ncorr_BD_ttp_d0_nonrecan <- cor.test(roi_perf_vals$ttp.d0.nonrecan, roi_perf_vals$tsa.d0.nonrecan, method = \"pearson\")\ncorr_BD_ttp_d0_recan <- cor.test(roi_perf_vals$ttp.d0.recan, roi_perf_vals$tsa.d0.recan, method = \"pearson\")\ncorr_BD_ttp_d1_nonrecan <- cor.test(roi_perf_vals$ttp.d1.nonrecan, roi_perf_vals$tsa.d1.nonrecan, method = \"pearson\")\ncorr_BD_ttp_d1_recan <- cor.test(roi_perf_vals$ttp.d1.recan, roi_perf_vals$tsa.d1.recan, method = \"pearson\")\n\n# print correlations between BOLD delay and Tmax/TTP on different days\ncorr_all <- list(corr_BD_tmax_d0_nonrecan, corr_BD_tmax_d0_recan, corr_BD_tmax_d1_nonrecan, corr_BD_tmax_d1_recan, corr_BD_ttp_d0_nonrecan, corr_BD_ttp_d0_recan, corr_BD_ttp_d1_nonrecan, corr_BD_ttp_d1_recan)\n\nprint(\"Pearson correlation coefficients between perfusion values in ROIs\")\nfor (y in corr_all) {\n        print(y$data.name)\n        print(paste(\"r=\", round(y$estimate,2), \", 95% CI =\", round(y$conf.int[1],2), \"-\", round(y$conf.int[2],2), \", p =\", round(y$p.value,5)))}\n\n# scatter plots of BOLD delay vs Tmax/TTP on different days\nplot(roi_perf_vals$tmax.d0.nonrecan, roi_perf_vals$tsa.d0.nonrecan, col = \"red\", xlim = range(roi_perf_vals$tmax.d0.nonrecan, roi_perf_vals$tmax.d0.recan), ylim = range(roi_perf_vals$tsa.d0.nonrecan, roi_perf_vals$tsa.d0.recan), main = \"Day 0\", xlab = \"Tmax (s)\", ylab = \"BOLD delay (s)\")\npoints(roi_perf_vals$tmax.d0.recan, roi_perf_vals$tsa.d0.recan, col = \"blue\")\nlegend(\"topleft\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n\nplot(roi_perf_vals$tmax.d1.nonrecan, roi_perf_vals$tsa.d1.nonrecan, col = \"red\", xlim = range(roi_perf_vals$tmax.d1.nonrecan, roi_perf_vals$tmax.d1.recan), ylim = range(roi_perf_vals$tsa.d1.nonrecan, roi_perf_vals$tsa.d1.recan), main = \"Day 1\", xlab = \"Tmax (s)\", ylab = \"BOLD delay (s)\")\npoints(roi_perf_vals$tmax.d1.recan, roi_perf_vals$tsa.d1.recan, col = \"blue\")\nlegend(\"topleft\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n\nplot(roi_perf_vals$ttp.d0.nonrecan, roi_perf_vals$tsa.d0.nonrecan, col = \"red\", xlim = range(roi_perf_vals$ttp.d0.nonrecan, roi_perf_vals$ttp.d0.recan), ylim = range(roi_perf_vals$tsa.d0.nonrecan, roi_perf_vals$tsa.d0.recan), main = \"Day 0\", xlab = \"TTP (s)\", ylab = \"BOLD delay (s)\")\npoints(roi_perf_vals$ttp.d0.recan, roi_perf_vals$tsa.d0.recan, col = \"blue\")\nlegend(\"topright\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n\nplot(roi_perf_vals$ttp.d1.nonrecan, roi_perf_vals$tsa.d1.nonrecan, col = \"red\", xlim = range(roi_perf_vals$ttp.d1.nonrecan, roi_perf_vals$ttp.d1.recan), ylim = range(roi_perf_vals$tsa.d1.nonrecan, roi_perf_vals$tsa.d1.recan), main = \"Day 1\", xlab = \"TTP (s)\", ylab = \"BOLD delay (s)\")\npoints(roi_perf_vals$ttp.d1.recan, roi_perf_vals$tsa.d1.recan, col = \"blue\")\nlegend(\"topright\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n\nplot(roi_perf_vals$ttp.d0.nonrecan, roi_perf_vals$tmax.d0.nonrecan, col = \"red\", xlim = range(roi_perf_vals$ttp.d0.nonrecan, roi_perf_vals$ttp.d0.recan), ylim = range(roi_perf_vals$tmax.d0.nonrecan, roi_perf_vals$tmax.d0.recan), main = \"Day 0\", xlab = \"TTP (s)\", ylab = \"Tmax (s)\")\npoints(roi_perf_vals$ttp.d0.recan, roi_perf_vals$tmax.d0.recan, col = \"blue\")\nlegend(\"topright\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n\nplot(roi_perf_vals$ttp.d1.nonrecan, roi_perf_vals$tmax.d1.nonrecan, col = \"red\", xlim = range(roi_perf_vals$ttp.d1.nonrecan, roi_perf_vals$ttp.d1.recan), ylim = range(roi_perf_vals$tmax.d1.nonrecan, roi_perf_vals$tmax.d1.recan), main = \"Day 1\", xlab = \"TTP (s)\", ylab = \"Tmax (s)\")\npoints(roi_perf_vals$ttp.d1.recan, roi_perf_vals$tmax.d1.recan, col = \"blue\")\nlegend(\"topright\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n```\n\n```{r message=F, cache=F, warning=F, echo=F, fig.asp=1}\n# plot change (delta) in perfusion values in ROIs between days 0 + 1\npar(mfrow=c(1,1))\nplot(tmax_diff_nonrecan, BD_diff_nonrecan, col = \"red\", ylim = range(BD_diff_recan, BD_diff_nonrecan), xlim = range(tmax_diff_recan, tmax_diff_nonrecan), xlab = \"Delta Tmax (s)\", ylab = \"Delta BOLD delay (s)\")\npoints(tmax_diff_recan, BD_diff_recan, col = \"blue\")\nabline(v=0, h=0, lty = 2)\nlegend(\"topleft\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n\nplot(ttp_diff_nonrecan, BD_diff_nonrecan, col = \"red\", ylim = range(BD_diff_recan, BD_diff_nonrecan), xlim = range(ttp_diff_recan, ttp_diff_nonrecan), xlab = \"Delta TTP (s)\", ylab = \"Delta BOLD delay (s)\")\npoints(ttp_diff_recan, BD_diff_recan, col = \"blue\")\nabline(v=0, h=0, lty = 2)\nlegend(\"topleft\", pch = 1, col = c(\"red\", \"blue\"), legend = c(\"Non-recanalizers\", \"Recanalizers\"))\n```\n```{r message=F, cache=F, warning=F, echo=F, fig.asp=1.5}\n# plot kernel density plots\n          # create transparent fill colours\n          redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)\n          bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)\n\n          par(mfrow = c(3,2))\nfor (j in c(\"tmax.d0.nonrecan\", \"tmax.d0.recan\", \"tsa.d0.nonrecan\", \"tsa.d0.recan\", \"ttp.d0.nonrecan\", \"ttp.d0.recan\")) {\n\nplot(density(roi_perf_vals[[j]], bw = 0.2), col = bluetrans, xlab = \"Seconds\", xlim=(c(0,8)), ylim = c(0,1.3), main = gsub(\".d0.\", \"_\", j), lwd = 3)\n#polygon(density(roi_perf_vals[[j]]), col = bluetrans, border = \"blue\")\n\nlines(density(roi_perf_vals[[gsub(\"0\",\"1\",j)]], bw = 0.2), col = redtrans, lwd = 3)\n#polygon(density(roi_perf_vals[[gsub(\"0\",\"1\",j)]], col = redtrans, border = \"red\"))\n\nroi_vals_d0_d1_test <- wilcoxsign_test(roi_perf_vals[[j]]~roi_perf_vals[[gsub(\"0\",\"1\",j)]], paired = T)\n\nprint(paste(\"Wilcoxon signed rank test for changes between\",j,\"median =\", round(median(roi_perf_vals[[j]]),3), \"&\", gsub(\"0\",\"1\",j), \"median =\", round(median(roi_perf_vals[[gsub(\"0\",\"1\",j)]]),3), \"(Z-score =\", round(roi_vals_d0_d1_test@statistic@teststatistic,2), \", p =\", round(pvalue(roi_vals_d0_d1_test),5),\")\"))\nprint(paste(\"effect size =\", signif(roi_vals_d0_d1_test@statistic@teststatistic/sqrt(length(roi_perf_vals[[j]])*2))), 2)\n\n}\n\n\n```",
    "created" : 1496397271079.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2687266749",
    "id" : "937A6C9A",
    "lastKnownWriteTime" : 1504089818,
    "last_content_update" : 1504089818504,
    "path" : "C:/Users/khalila/Desktop/long_BD_files/results.Rmd",
    "project_path" : "results.Rmd",
    "properties" : {
        "last_setup_crc32" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}