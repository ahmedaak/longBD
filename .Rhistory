r6 <- icc(volumes_data[,c(9,15)], model = "twoway", type = "agreement", r0 = 0, conf.level = 0.95)
r6$comparison <- "Tmax ratios manual vs auto"
agr_list_all <- list(r3,r6)
# boxplots of DWI, BOLD delay, Tmax volumes, and BOLD delay/Tmax ratios D1 vs D0 for recanalizers + non-recanalizers
par(mfrow=c(2,2))
# DWI volumes
boxplot(volumes_data$DWI_D0~volumes_data$recan, at=c(4,1),xlim=c(0,6),ylim=c(0,50), xaxt='n', boxlwd=1.5, cex.axis=1.5)
boxplot(volumes_data$DWI_D1~volumes_data$recan, add=T,at=c(5,2), xaxt='n', col="grey", boxlwd=1.5,ylab="Volume (mL)", cex.axis=1.5, cex.lab=1.5)
# replace x-axis labels
axis(side = 1, at=c(1.5,4.5),labels=c("Recanalizers","Non-recanalizers"), cex.axis=1.5)
# add legend
legend("topleft", legend = c("Day 0","Day 1"), fill=c("white","grey"),cex = 1.5)
title("DWI",cex.main=1.5)
# BOLD delay volumes
boxplot(volumes_data$TSA_D0_man~volumes_data$recan, at=c(4,1),xlim=c(0,6),ylim=c(0,170), xaxt='n', boxlwd=1.5, cex.axis=1.5)
boxplot(volumes_data$TSA_D1_man~volumes_data$recan, add=T,at=c(5,2), xaxt='n', col="grey", boxlwd=1.5, cex.axis=1.5,ylab="Volume (mL)", cex.lab=1.5)
# replace x-axis labels
axis(side = 1, at=c(1.5,4.5),labels=c("Recanalizers","Non-recanalizers"), cex.axis=1.5)
# add legend
legend("topleft", legend = c("Day 0","Day 1"), fill=c("white","grey"),cex = 1.5)
title("BOLD delay",cex.main=1.5)
# Tmax volumes
boxplot(volumes_data$Tmax_D0_man~volumes_data$recan, at=c(4,1),xlim=c(0,6),ylim=c(0,120), xaxt='n', boxlwd=1.5, cex.axis=1.5)
boxplot(volumes_data$Tmax_D1_man~volumes_data$recan, add=T,at=c(5,2), xaxt='n', col="grey", boxlwd=1.5,ylab="Volume (mL)", cex.axis=1.5, cex.lab=1.5)
# replace x-axis labels
axis(side = 1, at=c(1.5,4.5),labels=c("Recanalizers","Non-recanalizers"), cex.axis=1.5)
# add legend
legend("topleft", legend = c("Day 0","Day 1"), fill=c("white","grey"),cex = 1.5)
title("Tmax",cex.main=1.5)
# Ratios. NB: the BOLD delay ratios here are ONLY for subjects who have both BD + Tmax (for comparison purposes)
boxplot(volumes_data[volumes_data$recan=="No" & volumes_data$Tmax_D0_man!="NA",]$TSA_ratio_man, at=c(1),xlim=c(0,6),ylim=c(0,2.5), xaxt='n', boxlwd=1.5, cex.axis=1.5, boxwex=2)
boxplot(volumes_data[volumes_data$recan=="Yes" & volumes_data$Tmax_D0_man!="NA",]$TSA_ratio_man, add=T,at=c(2), xaxt='n', col="grey", boxlwd=1.5, cex.axis=1.5,ylab="D1/D0 volume ratio", cex.axis=1.5, cex.lab=1.5, boxwex=2)
boxplot(volumes_data[volumes_data$recan=="No",]$Tmax_ratio_man, add=T, at=c(4),xlim=c(0,6),ylim=c(0,2), xaxt='n', boxlwd=1.5, cex.axis=1.5, boxwex=2)
boxplot(volumes_data[volumes_data$recan=="Yes",]$Tmax_ratio_man, add=T,at=c(5), xaxt='n', col="grey", boxlwd=1.5, cex.axis=1.5,ylab="D1/D0 volume ratio", cex.axis=1.5, cex.lab=1.5, boxwex=2)
# add horizontal dashed line at ratio = 1
abline(h=1.0, lty=2)
# replace x-axis labels
axis(side = 1, at=c(1.5,4.5),labels=c("BOLD delay","Tmax"), cex.axis=1.5)
# add legend
legend("topright", legend = c("Non-recanalizers","Recanalizers"), fill=c("white","grey"),cex = 1.5)
title("Ratios",cex.main=1.5)
volumes_data
r1 <- wilcox.test(volumes_data$TSA_ratio_man~volumes_data$recan)
r1
r1 <- wilcox.test(volumes_data$DWI_ratio~volumes_data$recan)
r1 <- wilcoxon.test(volumes_data$DWI_ratio~volumes_data$recan)
library(coin)
r1 <- wilcoxon.test(volumes_data$DWI_ratio~volumes_data$recan)
r1 <- wilcox.test(volumes_data$DWI_ratio~volumes_data$recan)
r1 <- wilcoxon_test(volumes_data$DWI_ratio~volumes_data$recan)
r1 <- wilcoxsign_test(volumes_data$DWI_ratio~volumes_data$recan)
volumes_data$DWI_ratio~volumes_data$recan
volumes_data$DWI_ratio
r1 <- wilcox.test(volumes_data$DWI_ratio~volumes_data$recan)
r1
volumes_data
r1
r1$data.name
quartiles(volumes_data$DWI_ratio)
quantiles(volumes_data$DWI_ratio)
quantile(volumes_data$DWI_ratio)
quantile(volumes_data$DWI_ratio, na.rm=T)
median(volumes_data$DWI_ratio, na.rm=T)
r2<-quantile(volumes_data$DWI_ratio, na.rm=T)
r2$50%
r2[3]
quantile(volumes_data$DWI_ratio, na.rm=T)[3]
Difference between DWI lesion growth in recanalizers (median=`r quantile(volumes_data$DWI_ratio)[3]`, IQR=`r quantile(volumes_data$DWI_ratio)[2]`-`r quantile(volumes_data$DWI_ratio)[4]`)
quantile(volumes_data$DWI_ratio[,1], na.rm=T)[3]
quantile(volumes_data[,1]$DWI_ratio, na.rm=T)[3]
quantile(volumes_data$DWI_ratio, na.rm=T)[3]
quantile(volumes_data[,]volumes_data$DWI_ratio, na.rm=T)[3]
volumes_data
volumes_data[volumes_data$recan=="Yes",]
volumes_data[volumes_data$recan=="Yes",]$DWI_ratio
quantile(volumes_data[,]volumes_data$DWI_ratio, na.rm=T)[3]
quantile(volumes_data[,]volumes_data$DWI_ratio, na.rm=T)
quantile(volumes_data$DWI_ratio, na.rm=T)
volumes_data[volumes_data$recan=="Yes"&volumes_data$Tmax_D0_man>0,]$DWI_ratio
quantile(volumes_data[volumes_data$recan=="Yes"&volumes_data$Tmax_D0_man>0,]$DWI_ratio,na.rm=T)
quantile(volumes_data[volumes_data$recan=="Yes"&volumes_data$Tmax_D0_man>0,]$TSA_man_ratio,na.rm=T)
quantile(volumes_data[volumes_data$recan=="Yes"&volumes_data$Tmax_D0_man>0,]$TSA_ratio_man,na.rm=T)
rm(list = ls())
library(coin)
subjects <- c("sub0028", "sub0030", "sub0036", "sub0056", "sub0058", "sub0127", "sub0147", "sub0153", "sub0156", "sub0177", "sub0179", "sub0186", "sub0189", "sub0203", "sub0206")
recan_status <- c("N", "N", "N", "Y", "N", "N", "Y", "N", "Y", "N", "Y", "Y", "Y", "N", "N")
for (i in subjects) # loop through subjects
{
# names of ROIs, from which the perfusion values are extracted + plotted
text_filenames <- c("Tmax_BL", "Tmax_CL", "Tmax_D0D1IG", "Tmax_VT", "TSA_VS_BL", "TSA_VS_CL", "TSA_VS_D1IG", "TSA_VS_VT", "TSA_HH_BL", "TSA_HH_CL", "TSA_HH_D1IG", "TSA_HH_VT")
roi_labels <- c("Tmax - DWI lesion", "Tmax - Contralateral", "Tmax - Early infarct growth", "Tmax - Benign oligemia", "BOLD delay VS - DWI lesion", "BOLD delay VS - Contralateral", "BOLD delay VS - Early infarct growth", "BOLD delay VS - Benign oligemia","BOLD delay HH - DWI lesion", "BOLD delay HH - Contralateral", "BOLD delay HH - Early infarct growth", "BOLD delay HH - Benign oligemia")
print(paste(i, "Recan = ", recan_status[subjects==i])) # print this subject's recanalization status
par(mfrow=c(6,2))
allrois_es <- c()
allrois_names <- c()
for (x in text_filenames) # loop through ROIs
{
perf_d0_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/" , x , "_D0.txt" , sep = "")
perf_d1_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/", x , "_D1.txt", sep = "")
if (file.exists(perf_d0_file) && file.exists(perf_d1_file))
{
perf_d0 <- read.csv(perf_d0_file, header = F, sep = "")
perf_d0 <- perf_d0$V4
perf_d0[perf_d0 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
perf_d1 <- read.csv(perf_d1_file, header = F, sep = "")
perf_d1 <- perf_d1$V4
perf_d1[perf_d1 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
# test for differences between D0 + D1 in each of the ROIs
#################################################
### RUN THIS PART AGAIN IF ANYTHING CHANGES RE THE VOXELWISE VALUES IN THE ROIs - OTHERWISE LOAD ALREADY CALCULATED RESULTS (SEE BELOW)
if(length(perf_d0)>1 && length(perf_d1)>1){
#perf_d0_d1_wilcox <- wilcoxsign_test(formula = perf_d0 ~ perf_d1, paired = T) # perform test
# save results
#save(perf_d0_d1_wilcox, list = c("perf_d0_d1_wilcox"), file = paste("newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
###################################################
# load results
load(paste("newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
# calculate effect size for D0/D1 comparison
perf_d0_d1_es <- perf_d0_d1_wilcox@statistic@teststatistic/sqrt(length(perf_d0)*2)
save(perf_d0_d1_es, list = c("perf_d0_d1_es"), file = paste("newdata_08062017/voxelwise_vals/",i, "/", x, "_es.Rdata", sep = ""))
# print results
print(x) # Print ROI name
print(paste("p =",signif(pvalue(perf_d0_d1_wilcox),5), "ES =", signif(perf_d0_d1_es,2)))
allrois_es <- c(allrois_es, perf_d0_d1_es)
allrois_names <- c(allrois_names, x)
}
# calculate kernel densities for voxelwise BOLD delay values
#v = get(i)
perf_d0_dens <- density(perf_d0, bw = 1)
perf_d1_dens <- density(perf_d1, bw = 1)
## KERNEL DENSITY PLOTS
# create transparent fill colours
redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)
bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)
plot(perf_d1_dens, col = "red", xlim=(c(0,20)), ylim=c(0,max(perf_d0_dens$y, perf_d1_dens$y)), lwd = 3, xlab = "Seconds", main = roi_labels[text_filenames==x])
polygon(perf_d1_dens, col = redtrans, border = "red")
lines(perf_d0_dens, col = "blue", lwd = 3)
polygon(perf_d0_dens, col = bluetrans, border = "blue")
abline(v = mean(perf_d0), col = "blue", lty = 3, lwd = 3)
abline(v = mean(perf_d1), col = "red", lty = 3, lwd = 3)
}
}
allrois_es <- as.data.frame(allrois_es) # save all rois for this subject
rownames(allrois_es) <- allrois_names # give the rois names}
assign(paste(i,"allrois_es", sep = "_"),allrois_es) # save as subject-specific variable
}
rm(list = ls())
library(coin)
subjects <- c("sub0028", "sub0030", "sub0036", "sub0056", "sub0058", "sub0127", "sub0147", "sub0153", "sub0156", "sub0177", "sub0179", "sub0186", "sub0189", "sub0203", "sub0206")
recan_status <- c("N", "N", "N", "Y", "N", "N", "Y", "N", "Y", "N", "Y", "Y", "Y", "N", "N")
for (i in subjects) # loop through subjects
{
# names of ROIs, from which the perfusion values are extracted + plotted
text_filenames <- c("Tmax_BL", "Tmax_CL", "Tmax_D0D1IG", "Tmax_VT", "TSA_VS_BL", "TSA_VS_CL", "TSA_VS_D1IG", "TSA_VS_VT", "TSA_HH_BL", "TSA_HH_CL", "TSA_HH_D1IG", "TSA_HH_VT")
roi_labels <- c("Tmax - DWI lesion", "Tmax - Contralateral", "Tmax - Early infarct growth", "Tmax - Benign oligemia", "BOLD delay VS - DWI lesion", "BOLD delay VS - Contralateral", "BOLD delay VS - Early infarct growth", "BOLD delay VS - Benign oligemia","BOLD delay HH - DWI lesion", "BOLD delay HH - Contralateral", "BOLD delay HH - Early infarct growth", "BOLD delay HH - Benign oligemia")
print(paste(i, "Recan = ", recan_status[subjects==i])) # print this subject's recanalization status
par(mfrow=c(6,2))
allrois_es <- c()
allrois_names <- c()
for (x in text_filenames) # loop through ROIs
{
perf_d0_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/" , x , "_D0.txt" , sep = "")
perf_d1_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/", x , "_D1.txt", sep = "")
if (file.exists(perf_d0_file) && file.exists(perf_d1_file))
{
perf_d0 <- read.csv(perf_d0_file, header = F, sep = "")
perf_d0 <- perf_d0$V4
perf_d0[perf_d0 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
perf_d1 <- read.csv(perf_d1_file, header = F, sep = "")
perf_d1 <- perf_d1$V4
perf_d1[perf_d1 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
# test for differences between D0 + D1 in each of the ROIs
#################################################
### RUN THIS PART AGAIN IF ANYTHING CHANGES RE THE VOXELWISE VALUES IN THE ROIs - OTHERWISE LOAD ALREADY CALCULATED RESULTS (SEE BELOW)
if(length(perf_d0)>1 && length(perf_d1)>1){
#perf_d0_d1_wilcox <- wilcoxsign_test(formula = perf_d0 ~ perf_d1, paired = T) # perform test
# save results
#save(perf_d0_d1_wilcox, list = c("perf_d0_d1_wilcox"), file = paste("newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
###################################################
# load results
load(paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
# calculate effect size for D0/D1 comparison
perf_d0_d1_es <- perf_d0_d1_wilcox@statistic@teststatistic/sqrt(length(perf_d0)*2)
save(perf_d0_d1_es, list = c("perf_d0_d1_es"), file = paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/newdata_08062017/voxelwise_vals/",i, "/", x, "_es.Rdata", sep = ""))
# print results
print(x) # Print ROI name
print(paste("p =",signif(pvalue(perf_d0_d1_wilcox),5), "ES =", signif(perf_d0_d1_es,2)))
allrois_es <- c(allrois_es, perf_d0_d1_es)
allrois_names <- c(allrois_names, x)
}
# calculate kernel densities for voxelwise BOLD delay values
#v = get(i)
perf_d0_dens <- density(perf_d0, bw = 1)
perf_d1_dens <- density(perf_d1, bw = 1)
## KERNEL DENSITY PLOTS
# create transparent fill colours
redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)
bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)
plot(perf_d1_dens, col = "red", xlim=(c(0,20)), ylim=c(0,max(perf_d0_dens$y, perf_d1_dens$y)), lwd = 3, xlab = "Seconds", main = roi_labels[text_filenames==x])
polygon(perf_d1_dens, col = redtrans, border = "red")
lines(perf_d0_dens, col = "blue", lwd = 3)
polygon(perf_d0_dens, col = bluetrans, border = "blue")
abline(v = mean(perf_d0), col = "blue", lty = 3, lwd = 3)
abline(v = mean(perf_d1), col = "red", lty = 3, lwd = 3)
}
}
allrois_es <- as.data.frame(allrois_es) # save all rois for this subject
rownames(allrois_es) <- allrois_names # give the rois names}
assign(paste(i,"allrois_es", sep = "_"),allrois_es) # save as subject-specific variable
}
rm(list = ls())
library(coin)
subjects <- c("sub0028", "sub0030", "sub0036", "sub0056", "sub0058", "sub0127", "sub0147", "sub0153", "sub0156", "sub0177", "sub0179", "sub0186", "sub0189", "sub0203", "sub0206")
recan_status <- c("N", "N", "N", "Y", "N", "N", "Y", "N", "Y", "N", "Y", "Y", "Y", "N", "N")
for (i in subjects) # loop through subjects
{
# names of ROIs, from which the perfusion values are extracted + plotted
text_filenames <- c("Tmax_BL", "Tmax_CL", "Tmax_D0D1IG", "Tmax_VT", "TSA_VS_BL", "TSA_VS_CL", "TSA_VS_D1IG", "TSA_VS_VT", "TSA_HH_BL", "TSA_HH_CL", "TSA_HH_D1IG", "TSA_HH_VT")
roi_labels <- c("Tmax - DWI lesion", "Tmax - Contralateral", "Tmax - Early infarct growth", "Tmax - Benign oligemia", "BOLD delay VS - DWI lesion", "BOLD delay VS - Contralateral", "BOLD delay VS - Early infarct growth", "BOLD delay VS - Benign oligemia","BOLD delay HH - DWI lesion", "BOLD delay HH - Contralateral", "BOLD delay HH - Early infarct growth", "BOLD delay HH - Benign oligemia")
print(paste(i, "Recan = ", recan_status[subjects==i])) # print this subject's recanalization status
par(mfrow=c(6,2))
allrois_es <- c()
allrois_names <- c()
for (x in text_filenames) # loop through ROIs
{
perf_d0_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/" , x , "_D0.txt" , sep = "")
perf_d1_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/", x , "_D1.txt", sep = "")
if (file.exists(perf_d0_file) && file.exists(perf_d1_file))
{
perf_d0 <- read.csv(perf_d0_file, header = F, sep = "")
perf_d0 <- perf_d0$V4
perf_d0[perf_d0 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
perf_d1 <- read.csv(perf_d1_file, header = F, sep = "")
perf_d1 <- perf_d1$V4
perf_d1[perf_d1 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
# load results of tests for differences between D0 + D1 in each of the ROIs
if(length(perf_d0)>1 && length(perf_d1)>1){
load(paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
# calculate effect size for D0/D1 comparison
perf_d0_d1_es <- perf_d0_d1_wilcox@statistic@teststatistic/sqrt(length(perf_d0)*2)
save(perf_d0_d1_es, list = c("perf_d0_d1_es"), file = paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_es.Rdata", sep = ""))
# print results
print(x) # Print ROI name
print(paste("p =",signif(pvalue(perf_d0_d1_wilcox),5), "ES =", signif(perf_d0_d1_es,2)))
allrois_es <- c(allrois_es, perf_d0_d1_es)
allrois_names <- c(allrois_names, x)
}
# calculate kernel densities for voxelwise BOLD delay values
perf_d0_dens <- density(perf_d0, bw = 1)
perf_d1_dens <- density(perf_d1, bw = 1)
# CREATE KERNEL DENSITY PLOTS
# create transparent fill colours
redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)
bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)
plot(perf_d1_dens, col = "red", xlim=(c(0,20)), ylim=c(0,max(perf_d0_dens$y, perf_d1_dens$y)), lwd = 3, xlab = "Seconds", main = roi_labels[text_filenames==x])
polygon(perf_d1_dens, col = redtrans, border = "red")
lines(perf_d0_dens, col = "blue", lwd = 3)
polygon(perf_d0_dens, col = bluetrans, border = "blue")
abline(v = mean(perf_d0), col = "blue", lty = 3, lwd = 3)
abline(v = mean(perf_d1), col = "red", lty = 3, lwd = 3)
}
}
allrois_es <- as.data.frame(allrois_es) # save all rois for this subject
rownames(allrois_es) <- allrois_names # give the rois names}
assign(paste(i,"allrois_es", sep = "_"),allrois_es) # save as subject-specific variable
}
rm(list = ls())
library(coin)
# subject names
subjects <- c("sub0028", "sub0030", "sub0036", "sub0056", "sub0058", "sub0127", "sub0147", "sub0153", "sub0156", "sub0177", "sub0179", "sub0186", "sub0189", "sub0203", "sub0206")
# recanalization status
recan_status <- c("N", "N", "N", "Y", "N", "N", "Y", "N", "Y", "N", "Y", "Y", "Y", "N", "N")
# names of ROIs, from which the perfusion values are extracted + plotted
text_filenames <- c("Tmax_BL", "Tmax_CL", "Tmax_D0D1IG", "Tmax_VT", "TSA_VS_BL", "TSA_VS_CL", "TSA_VS_D1IG", "TSA_VS_VT", "TSA_HH_BL", "TSA_HH_CL", "TSA_HH_D1IG", "TSA_HH_VT")
# labels of ROIs, from which the perfusion values are extracted + plotted
roi_labels <- c("Tmax - DWI lesion", "Tmax - Contralateral", "Tmax - Early infarct growth", "Tmax - Benign oligemia", "BOLD delay VS - DWI lesion", "BOLD delay VS - Contralateral", "BOLD delay VS - Early infarct growth", "BOLD delay VS - Benign oligemia","BOLD delay HH - DWI lesion", "BOLD delay HH - Contralateral", "BOLD delay HH - Early infarct growth", "BOLD delay HH - Benign oligemia")
for (i in subjects){ # loop through subjects
print(paste(i, "Recan = ", recan_status[subjects==i])) # print this subject's recanalization status
par(mfrow=c(6,2))
allrois_es <- c()
allrois_names <- c()
for (x in text_filenames) # loop through ROIs
{
perf_d0_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/" , x , "_D0.txt" , sep = "")
perf_d1_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/", x , "_D1.txt", sep = "")
if (file.exists(perf_d0_file) && file.exists(perf_d1_file))
{
perf_d0 <- read.csv(perf_d0_file, header = F, sep = "")
perf_d0 <- perf_d0$V4
perf_d0[perf_d0 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
perf_d1 <- read.csv(perf_d1_file, header = F, sep = "")
perf_d1 <- perf_d1$V4
perf_d1[perf_d1 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
# load results of tests for differences between D0 + D1 in each of the ROIs
if(length(perf_d0)>1 && length(perf_d1)>1){
load(paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
# calculate effect size for D0/D1 comparison
perf_d0_d1_es <- perf_d0_d1_wilcox@statistic@teststatistic/sqrt(length(perf_d0)*2)
save(perf_d0_d1_es, list = c("perf_d0_d1_es"), file = paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_es.Rdata", sep = ""))
# print results
print(x) # Print ROI name
print(paste("p =",signif(pvalue(perf_d0_d1_wilcox),5), "ES =", signif(perf_d0_d1_es,2)))
allrois_es <- c(allrois_es, perf_d0_d1_es)
allrois_names <- c(allrois_names, x)
}
# calculate kernel densities for voxelwise BOLD delay values
perf_d0_dens <- density(perf_d0, bw = 1)
perf_d1_dens <- density(perf_d1, bw = 1)
# CREATE KERNEL DENSITY PLOTS
# create transparent fill colours
redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)
bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)
plot(perf_d1_dens, col = "red", xlim=(c(0,20)), ylim=c(0,max(perf_d0_dens$y, perf_d1_dens$y)), lwd = 3, xlab = "Seconds", main = roi_labels[text_filenames==x])
polygon(perf_d1_dens, col = redtrans, border = "red")
lines(perf_d0_dens, col = "blue", lwd = 3)
polygon(perf_d0_dens, col = bluetrans, border = "blue")
abline(v = mean(perf_d0), col = "blue", lty = 3, lwd = 3)
abline(v = mean(perf_d1), col = "red", lty = 3, lwd = 3)
}
}
allrois_es <- as.data.frame(allrois_es) # save all rois for this subject
rownames(allrois_es) <- allrois_names # give the rois names}
assign(paste(i,"allrois_es", sep = "_"),allrois_es) # save as subject-specific variable
}
rm(list = ls())
library(coin)
# subject names
subjects <- c("sub0028", "sub0030", "sub0036", "sub0056", "sub0058", "sub0127", "sub0147", "sub0153", "sub0156", "sub0177", "sub0179", "sub0186", "sub0189", "sub0203", "sub0206")
# recanalization status
recan_status <- c("N", "N", "N", "Y", "N", "N", "Y", "N", "Y", "N", "Y", "Y", "Y", "N", "N")
# names of ROIs, from which the perfusion values are extracted + plotted
text_filenames <- c("Tmax_BL", "Tmax_CL", "Tmax_D0D1IG", "Tmax_VT", "TSA_VS_BL", "TSA_VS_CL", "TSA_VS_D1IG", "TSA_VS_VT", "TSA_HH_BL", "TSA_HH_CL", "TSA_HH_D1IG", "TSA_HH_VT")
# labels of ROIs, from which the perfusion values are extracted + plotted
roi_labels <- c("Tmax - DWI lesion", "Tmax - Contralateral", "Tmax - Early infarct growth", "Tmax - Benign oligemia", "BOLD delay VS - DWI lesion", "BOLD delay VS - Contralateral", "BOLD delay VS - Early infarct growth", "BOLD delay VS - Benign oligemia","BOLD delay HH - DWI lesion", "BOLD delay HH - Contralateral", "BOLD delay HH - Early infarct growth", "BOLD delay HH - Benign oligemia")
for (i in subjects){ # loop through subjects
print(paste(i, "Recan = ", recan_status[subjects==i])) # print this subject's recanalization status
par(mfrow=c(6,2))
allrois_es <- c()
allrois_names <- c()
for (x in text_filenames) # loop through ROIs
{
perf_d0_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/" , x , "_D0.txt" , sep = "")
perf_d1_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/", x , "_D1.txt", sep = "")
if (file.exists(perf_d0_file) && file.exists(perf_d1_file))
{
perf_d0 <- read.csv(perf_d0_file, header = F, sep = "")
perf_d0 <- perf_d0$V4
perf_d0[perf_d0 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
perf_d1 <- read.csv(perf_d1_file, header = F, sep = "")
perf_d1 <- perf_d1$V4
perf_d1[perf_d1 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
# load results of tests for differences between D0 + D1 in each of the ROIs
if(length(perf_d0)>1 && length(perf_d1)>1){
load(paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
# calculate effect size for D0/D1 comparison
perf_d0_d1_es <- perf_d0_d1_wilcox@statistic@teststatistic/sqrt(length(perf_d0)*2)
save(perf_d0_d1_es, list = c("perf_d0_d1_es"), file = paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_es.Rdata", sep = ""))
# print results
print(x) # Print ROI name
print(paste("p =",signif(pvalue(perf_d0_d1_wilcox),5), "ES =", signif(perf_d0_d1_es,2)))
allrois_es <- c(allrois_es, perf_d0_d1_es)
allrois_names <- c(allrois_names, x)
}
# calculate kernel densities for voxelwise BOLD delay values
perf_d0_dens <- density(perf_d0, bw = 1)
perf_d1_dens <- density(perf_d1, bw = 1)
# CREATE KERNEL DENSITY PLOTS
# create transparent fill colours
redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)
bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)
plot(perf_d1_dens, col = "red", xlim=(c(0,20)), ylim=c(0,max(perf_d0_dens$y, perf_d1_dens$y)), lwd = 3, xlab = "Seconds", main = roi_labels[text_filenames==x])
polygon(perf_d1_dens, col = redtrans, border = "red")
lines(perf_d0_dens, col = "blue", lwd = 3)
polygon(perf_d0_dens, col = bluetrans, border = "blue")
abline(v = mean(perf_d0), col = "blue", lty = 3, lwd = 3)
abline(v = mean(perf_d1), col = "red", lty = 3, lwd = 3)
}
}
allrois_es <- as.data.frame(allrois_es) # save all rois for this subject
rownames(allrois_es) <- allrois_names # give the rois names}
assign(paste(i,"allrois_es", sep = "_"),allrois_es) # save as subject-specific variable
}
traceback()
rm(list = ls())
library(coin)
# subject names
subjects <- c("sub0028", "sub0030", "sub0036", "sub0056", "sub0058", "sub0127", "sub0147", "sub0153", "sub0156", "sub0177", "sub0179", "sub0186", "sub0189", "sub0203", "sub0206")
# recanalization status
recan_status <- c("N", "N", "N", "Y", "N", "N", "Y", "N", "Y", "N", "Y", "Y", "Y", "N", "N")
# names of ROIs, from which the perfusion values are extracted + plotted
text_filenames <- c("Tmax_BL", "Tmax_CL", "Tmax_D0D1IG", "Tmax_VT", "TSA_VS_BL", "TSA_VS_CL", "TSA_VS_D1IG", "TSA_VS_VT", "TSA_HH_BL", "TSA_HH_CL", "TSA_HH_D1IG", "TSA_HH_VT")
# labels of ROIs, from which the perfusion values are extracted + plotted
roi_labels <- c("Tmax - DWI lesion", "Tmax - Contralateral", "Tmax - Early infarct growth", "Tmax - Benign oligemia", "BOLD delay VS - DWI lesion", "BOLD delay VS - Contralateral", "BOLD delay VS - Early infarct growth", "BOLD delay VS - Benign oligemia","BOLD delay HH - DWI lesion", "BOLD delay HH - Contralateral", "BOLD delay HH - Early infarct growth", "BOLD delay HH - Benign oligemia")
for (i in subjects){ # loop through subjects
print(paste(i, "Recan = ", recan_status[subjects==i])) # print this subject's recanalization status
par(mfrow=c(9,2))
allrois_es <- c()
allrois_names <- c()
for (x in text_filenames) # loop through ROIs
{
perf_d0_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/" , x , "_D0.txt" , sep = "")
perf_d1_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/", x , "_D1.txt", sep = "")
if (file.exists(perf_d0_file) && file.exists(perf_d1_file))
{
perf_d0 <- read.csv(perf_d0_file, header = F, sep = "")
perf_d0 <- perf_d0$V4
perf_d0[perf_d0 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
perf_d1 <- read.csv(perf_d1_file, header = F, sep = "")
perf_d1 <- perf_d1$V4
perf_d1[perf_d1 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
# load results of tests for differences between D0 + D1 in each of the ROIs
if(length(perf_d0)>1 && length(perf_d1)>1){
load(paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
# calculate effect size for D0/D1 comparison
perf_d0_d1_es <- perf_d0_d1_wilcox@statistic@teststatistic/sqrt(length(perf_d0)*2)
save(perf_d0_d1_es, list = c("perf_d0_d1_es"), file = paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_es.Rdata", sep = ""))
# print results
print(x) # Print ROI name
print(paste("p =",signif(pvalue(perf_d0_d1_wilcox),5), "ES =", signif(perf_d0_d1_es,2)))
allrois_es <- c(allrois_es, perf_d0_d1_es)
allrois_names <- c(allrois_names, x)
}
# calculate kernel densities for voxelwise BOLD delay values
perf_d0_dens <- density(perf_d0, bw = 1)
perf_d1_dens <- density(perf_d1, bw = 1)
# CREATE KERNEL DENSITY PLOTS
# create transparent fill colours
redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)
bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)
# plot
plot(perf_d1_dens, col = "red", xlim=(c(0,20)), ylim=c(0,max(perf_d0_dens$y, perf_d1_dens$y)), lwd = 3, xlab = "Seconds", main = roi_labels[text_filenames==x])
polygon(perf_d1_dens, col = redtrans, border = "red")
lines(perf_d0_dens, col = "blue", lwd = 3)
polygon(perf_d0_dens, col = bluetrans, border = "blue")
# add vertical lines showing D0 + D1 means
abline(v = mean(perf_d0), col = "blue", lty = 3, lwd = 3)
abline(v = mean(perf_d1), col = "red", lty = 3, lwd = 3)
}
}
allrois_es <- as.data.frame(allrois_es) # save all rois for this subject
rownames(allrois_es) <- allrois_names # give the rois names}
assign(paste(i,"allrois_es", sep = "_"),allrois_es) # save as subject-specific variable
}
rm(list = ls())
library(coin)
# subject names
subjects <- c("sub0028", "sub0030", "sub0036", "sub0056", "sub0058", "sub0127", "sub0147", "sub0153", "sub0156", "sub0177", "sub0179", "sub0186", "sub0189", "sub0203", "sub0206")
# recanalization status
recan_status <- c("N", "N", "N", "Y", "N", "N", "Y", "N", "Y", "N", "Y", "Y", "Y", "N", "N")
# names of ROIs, from which the perfusion values are extracted + plotted
text_filenames <- c("Tmax_BL", "Tmax_CL", "Tmax_D0D1IG", "Tmax_VT", "TSA_VS_BL", "TSA_VS_CL", "TSA_VS_D1IG", "TSA_VS_VT", "TSA_HH_BL", "TSA_HH_CL", "TSA_HH_D1IG", "TSA_HH_VT")
# labels of ROIs, from which the perfusion values are extracted + plotted
roi_labels <- c("Tmax - DWI lesion", "Tmax - Contralateral", "Tmax - Early infarct growth", "Tmax - Benign oligemia", "BOLD delay VS - DWI lesion", "BOLD delay VS - Contralateral", "BOLD delay VS - Early infarct growth", "BOLD delay VS - Benign oligemia","BOLD delay HH - DWI lesion", "BOLD delay HH - Contralateral", "BOLD delay HH - Early infarct growth", "BOLD delay HH - Benign oligemia")
for (i in subjects){ # loop through subjects
print(paste(i, "Recan = ", recan_status[subjects==i])) # print this subject's recanalization status
par(mfrow=c(6,2))
allrois_es <- c()
allrois_names <- c()
for (x in text_filenames) # loop through ROIs
{
perf_d0_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/" , x , "_D0.txt" , sep = "")
perf_d1_file <- paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/", i, "/", x , "_D1.txt", sep = "")
if (file.exists(perf_d0_file) && file.exists(perf_d1_file))
{
perf_d0 <- read.csv(perf_d0_file, header = F, sep = "")
perf_d0 <- perf_d0$V4
perf_d0[perf_d0 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
perf_d1 <- read.csv(perf_d1_file, header = F, sep = "")
perf_d1 <- perf_d1$V4
perf_d1[perf_d1 < 0] = 0 # SET ALL NEGATIVE VALUES TO ZERO
# load results of tests for differences between D0 + D1 in each of the ROIs
if(length(perf_d0)>1 && length(perf_d1)>1){
load(paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_individual_differences_d0_d1_ROIs.Rdata", sep = ""))
# calculate effect size for D0/D1 comparison
perf_d0_d1_es <- perf_d0_d1_wilcox@statistic@teststatistic/sqrt(length(perf_d0)*2)
save(perf_d0_d1_es, list = c("perf_d0_d1_es"), file = paste("C:/Users/khalila/Desktop/long_BD_files/newdata_08062017/voxelwise_vals/",i, "/", x, "_es.Rdata", sep = ""))
# print results
print(x) # Print ROI name
print(paste("p =",signif(pvalue(perf_d0_d1_wilcox),5), "ES =", signif(perf_d0_d1_es,2)))
allrois_es <- c(allrois_es, perf_d0_d1_es)
allrois_names <- c(allrois_names, x)
}
# calculate kernel densities for voxelwise BOLD delay values
perf_d0_dens <- density(perf_d0, bw = 1)
perf_d1_dens <- density(perf_d1, bw = 1)
# CREATE KERNEL DENSITY PLOTS
# create transparent fill colours
redtrans <- rgb(255, 0, 0, 75, maxColorValue=255)
bluetrans <- rgb(0, 0, 255, 75, maxColorValue=255)
dev.off()
# plot
plot(perf_d1_dens, col = "red", xlim=(c(0,20)), ylim=c(0,max(perf_d0_dens$y, perf_d1_dens$y)), lwd = 3, xlab = "Seconds", main = roi_labels[text_filenames==x])
polygon(perf_d1_dens, col = redtrans, border = "red")
lines(perf_d0_dens, col = "blue", lwd = 3)
polygon(perf_d0_dens, col = bluetrans, border = "blue")
# add vertical lines showing D0 + D1 means
abline(v = mean(perf_d0), col = "blue", lty = 3, lwd = 3)
abline(v = mean(perf_d1), col = "red", lty = 3, lwd = 3)
}
}
allrois_es <- as.data.frame(allrois_es) # save all rois for this subject
rownames(allrois_es) <- allrois_names # give the rois names}
assign(paste(i,"allrois_es", sep = "_"),allrois_es) # save as subject-specific variable
}
?stripchart
?pdf
install.packages("coin")
library(coin)
install.packages("knitr")
install.packages("knitr")
install.packages("ggplot2")
install.packages("irr")
